/**
 * Reveal Phase Component
 * Phase ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏ß‡∏ï
 */

"use client";

import { useEffect, useState } from "react";

type ItoPlayerAnswer = {
  playerId: string;
  playerName: string;
  number: number;
  answer: string;
  isRevealed: boolean;
  isCorrect?: boolean;
};

interface RevealPhaseProps {
  playerAnswers: ItoPlayerAnswer[];
  gameState: {
    revealedNumbers: number[];
    status: string;
  };
  lastRevealResult: {
    number: number; // ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏ß‡∏ï
    isCorrect: boolean;
    heartsLost: number;
    newHearts: number;
  } | null;
}

export default function RevealPhase({
  playerAnswers,
  gameState,
  lastRevealResult,
}: RevealPhaseProps) {
  const [countdown, setCountdown] = useState(5);

  // Countdown timer (5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
  useEffect(() => {
    const timer = setInterval(() => {
      setCountdown((prev) => Math.max(0, prev - 1));
    }, 1000);

    return () => clearInterval(timer);
  }, []);

  if (!lastRevealResult) {
    return null;
  }

  // ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏ß‡∏ï‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡∏à‡∏≤‡∏Å API (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà lastRevealedNumber)
  const votedNumber = lastRevealResult.number;
  const votedAnswer = playerAnswers.find(
    (a) => a.number === votedNumber
  );

  if (!votedAnswer) {
    return null;
  }

  const isCorrect = lastRevealResult.isCorrect;
  const heartsLost = lastRevealResult.heartsLost;

  // ‡∏´‡∏≤‡πÄ‡∏•‡∏Ç‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ (‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà <= ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏ß‡∏ï)
  const revealedThisRound = playerAnswers
    .filter((a) => a.isRevealed && a.number <= votedNumber)
    .map((a) => a.number)
    .filter((num, index, self) => self.indexOf(num) === index) // unique
    .sort((a, b) => a - b);

  // ‡∏´‡∏≤‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏Ç‡πâ‡∏≤‡∏° (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏¥‡∏î)
  const skippedNumbers = isCorrect === false
    ? revealedThisRound.filter((num) => num < votedNumber)
    : [];

  return (
    <div className="bg-white/10 backdrop-blur-lg rounded-3xl shadow-2xl p-8 border border-white/20 animate-fadeIn">
      <h3 className="text-2xl font-bold text-white mb-6 text-center">
        ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏ß‡∏ï
      </h3>

      {/* Revealed Card */}
      <div className="bg-gradient-to-br from-purple-500/30 to-pink-500/30 rounded-2xl p-8 mb-6 border-2 border-purple-400">
        {/* ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡∏°‡πÇ‡∏´‡∏ß‡∏ï - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏î‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î */}
        <div className="bg-white/30 rounded-2xl p-8 mb-4 border-2 border-yellow-400">
          <div className="text-center">
            <div className="text-white/90 text-lg mb-3 font-semibold">
              üéØ ‡∏ó‡∏µ‡∏°‡πÇ‡∏´‡∏ß‡∏ï‡πÄ‡∏•‡∏Ç:
            </div>
            <div className="text-8xl font-bold text-yellow-300 mb-4 drop-shadow-[0_0_15px_rgba(253,224,71,0.5)]">
              {votedAnswer.number}
            </div>
            <div className="text-white/70 text-sm mb-1">
              ‡∏Ñ‡∏≥‡πÉ‡∏ö‡πâ‡∏Ç‡∏≠‡∏á {votedAnswer.playerName}:
            </div>
            <div className="text-white text-lg italic">
              &quot;{votedAnswer.answer}&quot;
            </div>
          </div>
        </div>

        {/* ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏õ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ) */}
        {skippedNumbers.length > 0 && (
          <div className="bg-red-500/20 rounded-xl p-6 border-2 border-red-400/50">
            <div className="text-center">
              <div className="text-red-300 text-base mb-3 font-semibold">
                ‚ùå ‡πÅ‡∏ï‡πà‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß:
              </div>
              <div className="flex flex-wrap justify-center gap-4">
                {skippedNumbers.map((num, i) => (
                  <div
                    key={i}
                    className="text-5xl font-bold text-red-300"
                  >
                    {num}
                  </div>
                ))}
              </div>
            </div>
          </div>
        )}

        {revealedThisRound.length > 1 && (
          <div className="text-white/50 text-sm text-center mt-3 mb-3">
            (‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏•‡∏Ç‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥)
          </div>
        )}

        {/* Correct/Incorrect */}
        {isCorrect !== undefined && (
          <>
            {isCorrect ? (
              <div className="text-center">
                <div className="text-6xl mb-2">‚úÖ</div>
                <div className="text-2xl font-bold text-green-400">
                  ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!
                </div>
                <div className="text-white/70 mt-2">
                  ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
                </div>
              </div>
            ) : (
              <div className="text-center">
                <div className="text-6xl mb-2">‚ùå</div>
                <div className="text-2xl font-bold text-red-400">‡∏ú‡∏¥‡∏î!</div>
                <div className="text-white/70 mt-2">
                  ‡∏Ç‡πâ‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÑ‡∏õ - ‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏±‡∏ß‡πÉ‡∏à {heartsLost} ‡∏î‡∏ß‡∏á
                </div>
              </div>
            )}
          </>
        )}
      </div>

      {/* Revealed Numbers Progress */}
      <div className="bg-white/5 rounded-xl p-6">
        <h4 className="text-white font-bold mb-3 text-center">
          ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡πâ‡∏ß:
        </h4>
        <div className="flex flex-wrap justify-center gap-2">
          {gameState.revealedNumbers.map((num, i) => (
            <div
              key={i}
              className={`px-4 py-2 rounded-lg text-xl font-bold ${
                i === gameState.revealedNumbers.length - 1
                  ? "bg-yellow-500/50 text-yellow-100 border-2 border-yellow-400"
                  : "bg-white/20 text-white"
              }`}
            >
              {num}
            </div>
          ))}
        </div>
      </div>

      {/* Auto-transition message with countdown */}
      <div className="text-center mt-6">
        <div className="text-5xl font-bold text-yellow-300 mb-3">
          {countdown}
        </div>
        <div className="text-white/70">
          {gameState.status === "won" || gameState.status === "lost" ? (
            <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•...</p>
          ) : (
            <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏£‡∏≠‡∏ö‡∏ï‡πà‡∏≠‡πÑ‡∏õ...</p>
          )}
        </div>
      </div>
    </div>
  );
}
